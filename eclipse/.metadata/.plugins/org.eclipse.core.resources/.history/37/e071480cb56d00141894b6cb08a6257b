package com.magicnation;

import java.util.Random;

import net.minecraft.block.Block;
import net.minecraft.world.World;
import net.minecraft.world.chunk.IChunkProvider;
import net.minecraft.world.gen.feature.WorldGenMinable;
import cpw.mods.fml.common.IWorldGenerator;

public class magicnationGenerator implements IWorldGenerator {

@Override
public void generate(Random random, int chunkX, int chunkZ, World world, IChunkProvider chunkGenerator, IChunkProvider chunkPovider) {
	
	switch(world.provider.dimensionId){
	case -1:
		generateNether(world, random, chunkX*16, chunkZ*16);
	case 0:
		generateSurface(world, random, chunkX*16, chunkZ*16);
	case 1:
		generateEnd(world, random, chunkX*16, chunkZ*16);
		}
	
	}

	private void generateNether(World world,Random random,int x,int y) {
	
	}

	private void generateSurface(World world,Random random,int x,int y) {	////////////////////4+random.int(4)
		this.addOreSpawn(juanwan11_magicnationBlocks.oreHeliotrope, world, random, x, y, 16, 16, 13, 73,1 + random.nextInt(2), 55);
	}

	private void generateEnd(World world,Random random,int x,int y) {
	
	}

	public void addOreSpawn(Block block,World world,Random random,int blockXPos,int blockZPos,int maxX,int maxZ,int minY,int maxY,int maxVienSize,int chancesToSpawn){
		for(int i=0; i < chancesToSpawn; i++){
			int posX = blockXPos + random.nextInt(maxX);
			int posY = minY + random.nextInt(maxY - minY);
			int posZ = blockZPos + random.nextInt(maxZ);
			(new magicnationWorldGenMinable(block, maxVienSize)).generate(world, random, posX, posY, posZ);
		}
	}
}